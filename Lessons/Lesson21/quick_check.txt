Lesson 21 - Modeling Relationships in F#

Quick check 21.1  - pg. 250
1 What is the OO equivalent of discriminated unions?
A- Sealed classes, inheritnce and polymorphism.

2 Which language feature in F# do you use to test which case of a DU a value is?
A- Pattern matching

3 Can you add new cases to a DU later in your code?
A-  No.


Quick check 21.2  - pg. 253
1 How do you model shared fields in a discriminated union?
A- Through a composite record that contains the common fields and the DU value

2 Can you create one discriminated union with another one?
A- Yes.


Quick check 21.3  - pg. 255
1 When should you not use a discriminated union?
A- Unstable, or large hierarchies.

2 Why do you need to always place a wildcard handle for enums?
A- Intergers can be cast to any Enum, killing analysis
